name: Build

on:
  pull_request:
  push:
    paths-ignore:
      - '*.md'
      - 'LICENSE*'
  workflow_dispatch:

env:
  BUILD_PROFILE: release-lto
  CARGO_TARGET_DIR: target

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -D warnings
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get -y install libgtk-3-dev
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - name: Cargo check
        run: cargo check
      - name: Cargo clippy
        run: cargo clippy

  fmt:
    name: Format
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -D warnings
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Rust toolchain
        # We use nightly options in rustfmt.toml
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - name: Cargo fmt
        run: cargo fmt --all --check

  deny:
    name: Deny
    runs-on: ubuntu-latest
    strategy:
      matrix:
        checks:
          - advisories
          - bans licenses sources
    # Prevent new advisories from failing CI
    continue-on-error: ${{ matrix.checks == 'advisories' }}
    steps:
      - uses: actions/checkout@v4
      - uses: EmbarkStudios/cargo-deny-action@v1
        with:
          command: check ${{ matrix.checks }}

  test:
    name: Test
    if: 'false' # No tests yet
    strategy:
      matrix:
        platform: [ ubuntu-latest, windows-latest, macos-latest ]
      fail-fast: false
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get -y install libgtk-3-dev
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Cargo test
        run: cargo test --release

  build:
    name: Build
    strategy:
      matrix:
        include:
          - platform: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: linux-x86_64
            packages: libgtk-3-dev
            features: default
          - platform: windows-latest
            target: x86_64-pc-windows-msvc
            name: windows-x86_64
            features: default
          - platform: macos-latest
            target: x86_64-apple-darwin
            name: macos-x86_64
            features: default
          - platform: macos-latest
            target: aarch64-apple-darwin
            name: macos-arm64
            features: default
      fail-fast: false
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install dependencies
        if: matrix.packages != ''
        run: |
          sudo apt-get update
          sudo apt-get -y install ${{ matrix.packages }}
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - name: Cargo build
        run: >
          cargo build --profile ${{ env.BUILD_PROFILE }} --target ${{ matrix.target }} 
          --bin objdiff-cli --bin objdiff-gui --features ${{ matrix.features }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: |
            ${{ env.CARGO_TARGET_DIR }}/${{ matrix.target }}/${{ env.BUILD_PROFILE }}/objdiff-cli
            ${{ env.CARGO_TARGET_DIR }}/${{ matrix.target }}/${{ env.BUILD_PROFILE }}/objdiff-cli.exe
            ${{ env.CARGO_TARGET_DIR }}/${{ matrix.target }}/${{ env.BUILD_PROFILE }}/objdiff-gui
            ${{ env.CARGO_TARGET_DIR }}/${{ matrix.target }}/${{ env.BUILD_PROFILE }}/objdiff-gui.exe
          if-no-files-found: error

  release:
    name: Release
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Rename artifacts
        working-directory: artifacts
        run: |
          tree
          mkdir ../out
          for i in */*/$BUILD_PROFILE/objdiff-cli*; do
            mv "$i" "../out/$(sed -E "s/([^/]+)\/[^/]+\/$BUILD_PROFILE\/objdiff-cli/objdiff-cli-\1/" <<< "$i")"
          done
          for i in */*/$BUILD_PROFILE/objdiff-gui*; do
            mv "$i" "../out/$(sed -E "s/([^/]+)\/[^/]+\/$BUILD_PROFILE\/objdiff-gui/objdiff-\1/" <<< "$i")"
          done
          ls -R ../out
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: out/*
